# Project Euler

# Problem 44: Pentagon numbers
# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
# and D = |Pk − Pj| is minimised; what is the value of D?

import time

start_time = time.time()


def is_pentagonal_number(n):
    if (1 + (24 * n + 1) ** 0.5) % 6 == 0:
        return True
    return False


ans_project_44 = int(0)
temp = True
x = 1
while temp:
    for y in range(1, x):
        a = x * (3 * x - 1) / 2
        b = y * (3 * y - 1) / 2
        if is_pentagonal_number(a+b) and is_pentagonal_number(a-b):
            ans_project_44 = a-b
            temp = False
            break
    x += 1
print("Problem 44:", ans_project_44)
print("Total time:", time.time() - start_time)
